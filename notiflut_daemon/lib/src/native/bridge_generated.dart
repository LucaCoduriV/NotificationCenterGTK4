// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.75.1.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;

import 'dart:ffi' as ffi;

part 'bridge_generated.freezed.dart';

abstract class Native {
  /// This needs to be called first
  Future<void> setup({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSetupConstMeta;

  /// Starts the daemon
  /// This can fail if setup was not called before
  Stream<DaemonAction> startDaemon({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kStartDaemonConstMeta;

  /// Stop the daemon
  Future<void> stopDaemon({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kStopDaemonConstMeta;

  /// Sends an event to rust code
  Future<void> sendDaemonAction({required DaemonAction action, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSendDaemonActionConstMeta;
}

@freezed
class DaemonAction with _$DaemonAction {
  const factory DaemonAction.show(
    Notification field0,
  ) = DaemonAction_Show;
  const factory DaemonAction.showNc() = DaemonAction_ShowNc;
  const factory DaemonAction.closeNc() = DaemonAction_CloseNc;
  const factory DaemonAction.close(
    int field0,
  ) = DaemonAction_Close;
  const factory DaemonAction.update(
    List<Notification> field0, [
    int? field1,
  ]) = DaemonAction_Update;
  const factory DaemonAction.flutterClose(
    int field0,
  ) = DaemonAction_FlutterClose;
  const factory DaemonAction.flutterCloseAll() = DaemonAction_FlutterCloseAll;
  const factory DaemonAction.flutterCloseAllApp(
    String field0,
  ) = DaemonAction_FlutterCloseAllApp;
  const factory DaemonAction.flutterActionInvoked(
    int field0,
    String field1,
  ) = DaemonAction_FlutterActionInvoked;
}

class Hints {
  final bool? actionsIcon;
  final String? category;
  final String? desktopEntry;
  final bool? resident;
  final String? soundFile;
  final String? soundName;
  final bool? suppressSound;
  final bool? transient;
  final int? x;
  final int? y;
  final Urgency? urgency;

  const Hints({
    this.actionsIcon,
    this.category,
    this.desktopEntry,
    this.resident,
    this.soundFile,
    this.soundName,
    this.suppressSound,
    this.transient,
    this.x,
    this.y,
    this.urgency,
  });
}

class ImageData {
  final int width;
  final int height;
  final int rowstride;
  final bool onePointTwoBitAlpha;
  final int bitsPerSample;
  final int channels;
  final Uint8List data;

  const ImageData({
    required this.width,
    required this.height,
    required this.rowstride,
    required this.onePointTwoBitAlpha,
    required this.bitsPerSample,
    required this.channels,
    required this.data,
  });
}

@freezed
class ImageSource with _$ImageSource {
  const factory ImageSource.data(
    ImageData field0,
  ) = ImageSource_Data;
  const factory ImageSource.path(
    String field0,
  ) = ImageSource_Path;
}

class Notification {
  final int id;
  final String appName;
  final int replacesId;
  final String summary;
  final String body;
  final List<String> actions;
  final int timeout;
  final DateTime createdAt;
  final Hints hints;
  final ImageSource? appIcon;
  final ImageSource? appImage;

  const Notification({
    required this.id,
    required this.appName,
    required this.replacesId,
    required this.summary,
    required this.body,
    required this.actions,
    required this.timeout,
    required this.createdAt,
    required this.hints,
    this.appIcon,
    this.appImage,
  });
}

enum Urgency {
  Low,
  Normal,
  Critical,
}

class NativeImpl implements Native {
  final NativePlatform _platform;
  factory NativeImpl(ExternalLibrary dylib) => NativeImpl.raw(NativePlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory NativeImpl.wasm(FutureOr<WasmModule> module) => NativeImpl(module as ExternalLibrary);
  NativeImpl.raw(this._platform);
  Future<void> setup({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_setup(port_),
      parseSuccessData: _wire2api_unit,
      constMeta: kSetupConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSetupConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "setup",
        argNames: [],
      );

  Stream<DaemonAction> startDaemon({dynamic hint}) {
    return _platform.executeStream(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_start_daemon(port_),
      parseSuccessData: _wire2api_daemon_action,
      constMeta: kStartDaemonConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kStartDaemonConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "start_daemon",
        argNames: [],
      );

  Future<void> stopDaemon({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_stop_daemon(port_),
      parseSuccessData: _wire2api_unit,
      constMeta: kStopDaemonConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kStopDaemonConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "stop_daemon",
        argNames: [],
      );

  Future<void> sendDaemonAction({required DaemonAction action, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_daemon_action(action);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_send_daemon_action(port_, arg0),
      parseSuccessData: _wire2api_unit,
      constMeta: kSendDaemonActionConstMeta,
      argValues: [
        action
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSendDaemonActionConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "send_daemon_action",
        argNames: [
          "action"
        ],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  DateTime _wire2api_Chrono_Utc(dynamic raw) {
    return wire2apiTimestamp(ts: _wire2api_i64(raw), isUtc: true);
  }

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  List<String> _wire2api_StringList(dynamic raw) {
    return (raw as List<dynamic>).cast<String>();
  }

  bool _wire2api_bool(dynamic raw) {
    return raw as bool;
  }

  bool _wire2api_box_autoadd_bool(dynamic raw) {
    return raw as bool;
  }

  int _wire2api_box_autoadd_i32(dynamic raw) {
    return raw as int;
  }

  ImageData _wire2api_box_autoadd_image_data(dynamic raw) {
    return _wire2api_image_data(raw);
  }

  ImageSource _wire2api_box_autoadd_image_source(dynamic raw) {
    return _wire2api_image_source(raw);
  }

  Notification _wire2api_box_autoadd_notification(dynamic raw) {
    return _wire2api_notification(raw);
  }

  Urgency _wire2api_box_autoadd_urgency(dynamic raw) {
    return _wire2api_urgency(raw);
  }

  int _wire2api_box_autoadd_usize(dynamic raw) {
    return _wire2api_usize(raw);
  }

  DaemonAction _wire2api_daemon_action(dynamic raw) {
    switch (raw[0]) {
      case 0:
        return DaemonAction_Show(
          _wire2api_box_autoadd_notification(raw[1]),
        );
      case 1:
        return DaemonAction_ShowNc();
      case 2:
        return DaemonAction_CloseNc();
      case 3:
        return DaemonAction_Close(
          _wire2api_u32(raw[1]),
        );
      case 4:
        return DaemonAction_Update(
          _wire2api_list_notification(raw[1]),
          _wire2api_opt_box_autoadd_usize(raw[2]),
        );
      case 5:
        return DaemonAction_FlutterClose(
          _wire2api_u32(raw[1]),
        );
      case 6:
        return DaemonAction_FlutterCloseAll();
      case 7:
        return DaemonAction_FlutterCloseAllApp(
          _wire2api_String(raw[1]),
        );
      case 8:
        return DaemonAction_FlutterActionInvoked(
          _wire2api_u32(raw[1]),
          _wire2api_String(raw[2]),
        );
      default:
        throw Exception("unreachable");
    }
  }

  Hints _wire2api_hints(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 11) throw Exception('unexpected arr length: expect 11 but see ${arr.length}');
    return Hints(
      actionsIcon: _wire2api_opt_box_autoadd_bool(arr[0]),
      category: _wire2api_opt_String(arr[1]),
      desktopEntry: _wire2api_opt_String(arr[2]),
      resident: _wire2api_opt_box_autoadd_bool(arr[3]),
      soundFile: _wire2api_opt_String(arr[4]),
      soundName: _wire2api_opt_String(arr[5]),
      suppressSound: _wire2api_opt_box_autoadd_bool(arr[6]),
      transient: _wire2api_opt_box_autoadd_bool(arr[7]),
      x: _wire2api_opt_box_autoadd_i32(arr[8]),
      y: _wire2api_opt_box_autoadd_i32(arr[9]),
      urgency: _wire2api_opt_box_autoadd_urgency(arr[10]),
    );
  }

  int _wire2api_i32(dynamic raw) {
    return raw as int;
  }

  int _wire2api_i64(dynamic raw) {
    return castInt(raw);
  }

  ImageData _wire2api_image_data(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 7) throw Exception('unexpected arr length: expect 7 but see ${arr.length}');
    return ImageData(
      width: _wire2api_i32(arr[0]),
      height: _wire2api_i32(arr[1]),
      rowstride: _wire2api_i32(arr[2]),
      onePointTwoBitAlpha: _wire2api_bool(arr[3]),
      bitsPerSample: _wire2api_i32(arr[4]),
      channels: _wire2api_i32(arr[5]),
      data: _wire2api_uint_8_list(arr[6]),
    );
  }

  ImageSource _wire2api_image_source(dynamic raw) {
    switch (raw[0]) {
      case 0:
        return ImageSource_Data(
          _wire2api_box_autoadd_image_data(raw[1]),
        );
      case 1:
        return ImageSource_Path(
          _wire2api_String(raw[1]),
        );
      default:
        throw Exception("unreachable");
    }
  }

  List<Notification> _wire2api_list_notification(dynamic raw) {
    return (raw as List<dynamic>).map(_wire2api_notification).toList();
  }

  Notification _wire2api_notification(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 11) throw Exception('unexpected arr length: expect 11 but see ${arr.length}');
    return Notification(
      id: _wire2api_u32(arr[0]),
      appName: _wire2api_String(arr[1]),
      replacesId: _wire2api_u32(arr[2]),
      summary: _wire2api_String(arr[3]),
      body: _wire2api_String(arr[4]),
      actions: _wire2api_StringList(arr[5]),
      timeout: _wire2api_i32(arr[6]),
      createdAt: _wire2api_Chrono_Utc(arr[7]),
      hints: _wire2api_hints(arr[8]),
      appIcon: _wire2api_opt_box_autoadd_image_source(arr[9]),
      appImage: _wire2api_opt_box_autoadd_image_source(arr[10]),
    );
  }

  String? _wire2api_opt_String(dynamic raw) {
    return raw == null ? null : _wire2api_String(raw);
  }

  bool? _wire2api_opt_box_autoadd_bool(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_bool(raw);
  }

  int? _wire2api_opt_box_autoadd_i32(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_i32(raw);
  }

  ImageSource? _wire2api_opt_box_autoadd_image_source(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_image_source(raw);
  }

  Urgency? _wire2api_opt_box_autoadd_urgency(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_urgency(raw);
  }

  int? _wire2api_opt_box_autoadd_usize(dynamic raw) {
    return raw == null ? null : _wire2api_box_autoadd_usize(raw);
  }

  int _wire2api_u32(dynamic raw) {
    return raw as int;
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }

  void _wire2api_unit(dynamic raw) {
    return;
  }

  Urgency _wire2api_urgency(dynamic raw) {
    return Urgency.values[raw];
  }

  int _wire2api_usize(dynamic raw) {
    return castInt(raw);
  }
}

// Section: api2wire

@protected
bool api2wire_bool(bool raw) {
  return raw;
}

@protected
int api2wire_i32(int raw) {
  return raw;
}

@protected
int api2wire_u32(int raw) {
  return raw;
}

@protected
int api2wire_u8(int raw) {
  return raw;
}

@protected
int api2wire_urgency(Urgency raw) {
  return api2wire_i32(raw.index);
}

@protected
int api2wire_usize(int raw) {
  return raw;
}
// Section: finalizer

class NativePlatform extends FlutterRustBridgeBase<NativeWire> {
  NativePlatform(ffi.DynamicLibrary dylib) : super(NativeWire(dylib));

// Section: api2wire

  @protected
  int api2wire_Chrono_Utc(DateTime raw) {
    return api2wire_i64(raw.microsecondsSinceEpoch);
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_StringList> api2wire_StringList(List<String> raw) {
    final ans = inner.new_StringList_0(raw.length);
    for (var i = 0; i < raw.length; i++) {
      ans.ref.ptr[i] = api2wire_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<ffi.Bool> api2wire_box_autoadd_bool(bool raw) {
    return inner.new_box_autoadd_bool_0(api2wire_bool(raw));
  }

  @protected
  ffi.Pointer<wire_DaemonAction> api2wire_box_autoadd_daemon_action(DaemonAction raw) {
    final ptr = inner.new_box_autoadd_daemon_action_0();
    _api_fill_to_wire_daemon_action(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int32> api2wire_box_autoadd_i32(int raw) {
    return inner.new_box_autoadd_i32_0(api2wire_i32(raw));
  }

  @protected
  ffi.Pointer<wire_ImageData> api2wire_box_autoadd_image_data(ImageData raw) {
    final ptr = inner.new_box_autoadd_image_data_0();
    _api_fill_to_wire_image_data(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_ImageSource> api2wire_box_autoadd_image_source(ImageSource raw) {
    final ptr = inner.new_box_autoadd_image_source_0();
    _api_fill_to_wire_image_source(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_Notification> api2wire_box_autoadd_notification(Notification raw) {
    final ptr = inner.new_box_autoadd_notification_0();
    _api_fill_to_wire_notification(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int32> api2wire_box_autoadd_urgency(Urgency raw) {
    return inner.new_box_autoadd_urgency_0(api2wire_urgency(raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr> api2wire_box_autoadd_usize(int raw) {
    return inner.new_box_autoadd_usize_0(api2wire_usize(raw));
  }

  @protected
  int api2wire_i64(int raw) {
    return raw;
  }

  @protected
  ffi.Pointer<wire_list_notification> api2wire_list_notification(List<Notification> raw) {
    final ans = inner.new_list_notification_0(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      _api_fill_to_wire_notification(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_opt_String(String? raw) {
    return raw == null ? ffi.nullptr : api2wire_String(raw);
  }

  @protected
  ffi.Pointer<ffi.Bool> api2wire_opt_box_autoadd_bool(bool? raw) {
    return raw == null ? ffi.nullptr : api2wire_box_autoadd_bool(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> api2wire_opt_box_autoadd_i32(int? raw) {
    return raw == null ? ffi.nullptr : api2wire_box_autoadd_i32(raw);
  }

  @protected
  ffi.Pointer<wire_ImageSource> api2wire_opt_box_autoadd_image_source(ImageSource? raw) {
    return raw == null ? ffi.nullptr : api2wire_box_autoadd_image_source(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> api2wire_opt_box_autoadd_urgency(Urgency? raw) {
    return raw == null ? ffi.nullptr : api2wire_box_autoadd_urgency(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr> api2wire_opt_box_autoadd_usize(int? raw) {
    return raw == null ? ffi.nullptr : api2wire_box_autoadd_usize(raw);
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_0(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

// Section: finalizer

// Section: api_fill_to_wire

  void _api_fill_to_wire_box_autoadd_daemon_action(DaemonAction apiObj, ffi.Pointer<wire_DaemonAction> wireObj) {
    _api_fill_to_wire_daemon_action(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_image_data(ImageData apiObj, ffi.Pointer<wire_ImageData> wireObj) {
    _api_fill_to_wire_image_data(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_image_source(ImageSource apiObj, ffi.Pointer<wire_ImageSource> wireObj) {
    _api_fill_to_wire_image_source(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_notification(Notification apiObj, ffi.Pointer<wire_Notification> wireObj) {
    _api_fill_to_wire_notification(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_daemon_action(DaemonAction apiObj, wire_DaemonAction wireObj) {
    if (apiObj is DaemonAction_Show) {
      var pre_field0 = api2wire_box_autoadd_notification(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind = inner.inflate_DaemonAction_Show();
      wireObj.kind.ref.Show.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DaemonAction_ShowNc) {
      wireObj.tag = 1;
      return;
    }
    if (apiObj is DaemonAction_CloseNc) {
      wireObj.tag = 2;
      return;
    }
    if (apiObj is DaemonAction_Close) {
      var pre_field0 = api2wire_u32(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind = inner.inflate_DaemonAction_Close();
      wireObj.kind.ref.Close.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DaemonAction_Update) {
      var pre_field0 = api2wire_list_notification(apiObj.field0);
      var pre_field1 = api2wire_opt_box_autoadd_usize(apiObj.field1);
      wireObj.tag = 4;
      wireObj.kind = inner.inflate_DaemonAction_Update();
      wireObj.kind.ref.Update.ref.field0 = pre_field0;
      wireObj.kind.ref.Update.ref.field1 = pre_field1;
      return;
    }
    if (apiObj is DaemonAction_FlutterClose) {
      var pre_field0 = api2wire_u32(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind = inner.inflate_DaemonAction_FlutterClose();
      wireObj.kind.ref.FlutterClose.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DaemonAction_FlutterCloseAll) {
      wireObj.tag = 6;
      return;
    }
    if (apiObj is DaemonAction_FlutterCloseAllApp) {
      var pre_field0 = api2wire_String(apiObj.field0);
      wireObj.tag = 7;
      wireObj.kind = inner.inflate_DaemonAction_FlutterCloseAllApp();
      wireObj.kind.ref.FlutterCloseAllApp.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DaemonAction_FlutterActionInvoked) {
      var pre_field0 = api2wire_u32(apiObj.field0);
      var pre_field1 = api2wire_String(apiObj.field1);
      wireObj.tag = 8;
      wireObj.kind = inner.inflate_DaemonAction_FlutterActionInvoked();
      wireObj.kind.ref.FlutterActionInvoked.ref.field0 = pre_field0;
      wireObj.kind.ref.FlutterActionInvoked.ref.field1 = pre_field1;
      return;
    }
  }

  void _api_fill_to_wire_hints(Hints apiObj, wire_Hints wireObj) {
    wireObj.actions_icon = api2wire_opt_box_autoadd_bool(apiObj.actionsIcon);
    wireObj.category = api2wire_opt_String(apiObj.category);
    wireObj.desktop_entry = api2wire_opt_String(apiObj.desktopEntry);
    wireObj.resident = api2wire_opt_box_autoadd_bool(apiObj.resident);
    wireObj.sound_file = api2wire_opt_String(apiObj.soundFile);
    wireObj.sound_name = api2wire_opt_String(apiObj.soundName);
    wireObj.suppress_sound = api2wire_opt_box_autoadd_bool(apiObj.suppressSound);
    wireObj.transient = api2wire_opt_box_autoadd_bool(apiObj.transient);
    wireObj.x = api2wire_opt_box_autoadd_i32(apiObj.x);
    wireObj.y = api2wire_opt_box_autoadd_i32(apiObj.y);
    wireObj.urgency = api2wire_opt_box_autoadd_urgency(apiObj.urgency);
  }

  void _api_fill_to_wire_image_data(ImageData apiObj, wire_ImageData wireObj) {
    wireObj.width = api2wire_i32(apiObj.width);
    wireObj.height = api2wire_i32(apiObj.height);
    wireObj.rowstride = api2wire_i32(apiObj.rowstride);
    wireObj.one_point_two_bit_alpha = api2wire_bool(apiObj.onePointTwoBitAlpha);
    wireObj.bits_per_sample = api2wire_i32(apiObj.bitsPerSample);
    wireObj.channels = api2wire_i32(apiObj.channels);
    wireObj.data = api2wire_uint_8_list(apiObj.data);
  }

  void _api_fill_to_wire_image_source(ImageSource apiObj, wire_ImageSource wireObj) {
    if (apiObj is ImageSource_Data) {
      var pre_field0 = api2wire_box_autoadd_image_data(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind = inner.inflate_ImageSource_Data();
      wireObj.kind.ref.Data.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is ImageSource_Path) {
      var pre_field0 = api2wire_String(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind = inner.inflate_ImageSource_Path();
      wireObj.kind.ref.Path.ref.field0 = pre_field0;
      return;
    }
  }

  void _api_fill_to_wire_notification(Notification apiObj, wire_Notification wireObj) {
    wireObj.id = api2wire_u32(apiObj.id);
    wireObj.app_name = api2wire_String(apiObj.appName);
    wireObj.replaces_id = api2wire_u32(apiObj.replacesId);
    wireObj.summary = api2wire_String(apiObj.summary);
    wireObj.body = api2wire_String(apiObj.body);
    wireObj.actions = api2wire_StringList(apiObj.actions);
    wireObj.timeout = api2wire_i32(apiObj.timeout);
    wireObj.created_at = api2wire_Chrono_Utc(apiObj.createdAt);
    _api_fill_to_wire_hints(apiObj.hints, wireObj.hints);
    wireObj.app_icon = api2wire_opt_box_autoadd_image_source(apiObj.appIcon);
    wireObj.app_image = api2wire_opt_box_autoadd_image_source(apiObj.appImage);
  }

  void _api_fill_to_wire_opt_box_autoadd_image_source(ImageSource? apiObj, ffi.Pointer<wire_ImageSource> wireObj) {
    if (apiObj != null) _api_fill_to_wire_box_autoadd_image_source(apiObj, wireObj);
  }
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class NativeWire implements FlutterRustBridgeWireBase {
  @internal
  late final dartApi = DartApiDl(init_frb_dart_api_dl);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeWire(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeWire.fromLookup(ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup) : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr = _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>('store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr.asFunction<void Function(DartPostCObjectFnType)>();

  Object get_dart_object(
    int ptr,
  ) {
    return _get_dart_object(
      ptr,
    );
  }

  late final _get_dart_objectPtr = _lookup<ffi.NativeFunction<ffi.Handle Function(ffi.UintPtr)>>('get_dart_object');
  late final _get_dart_object = _get_dart_objectPtr.asFunction<Object Function(int)>();

  void drop_dart_object(
    int ptr,
  ) {
    return _drop_dart_object(
      ptr,
    );
  }

  late final _drop_dart_objectPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UintPtr)>>('drop_dart_object');
  late final _drop_dart_object = _drop_dart_objectPtr.asFunction<void Function(int)>();

  int new_dart_opaque(
    Object handle,
  ) {
    return _new_dart_opaque(
      handle,
    );
  }

  late final _new_dart_opaquePtr = _lookup<ffi.NativeFunction<ffi.UintPtr Function(ffi.Handle)>>('new_dart_opaque');
  late final _new_dart_opaque = _new_dart_opaquePtr.asFunction<int Function(Object)>();

  int init_frb_dart_api_dl(
    ffi.Pointer<ffi.Void> obj,
  ) {
    return _init_frb_dart_api_dl(
      obj,
    );
  }

  late final _init_frb_dart_api_dlPtr = _lookup<ffi.NativeFunction<ffi.IntPtr Function(ffi.Pointer<ffi.Void>)>>('init_frb_dart_api_dl');
  late final _init_frb_dart_api_dl = _init_frb_dart_api_dlPtr.asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  void wire_setup(
    int port_,
  ) {
    return _wire_setup(
      port_,
    );
  }

  late final _wire_setupPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>('wire_setup');
  late final _wire_setup = _wire_setupPtr.asFunction<void Function(int)>();

  void wire_start_daemon(
    int port_,
  ) {
    return _wire_start_daemon(
      port_,
    );
  }

  late final _wire_start_daemonPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>('wire_start_daemon');
  late final _wire_start_daemon = _wire_start_daemonPtr.asFunction<void Function(int)>();

  void wire_stop_daemon(
    int port_,
  ) {
    return _wire_stop_daemon(
      port_,
    );
  }

  late final _wire_stop_daemonPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>('wire_stop_daemon');
  late final _wire_stop_daemon = _wire_stop_daemonPtr.asFunction<void Function(int)>();

  void wire_send_daemon_action(
    int port_,
    ffi.Pointer<wire_DaemonAction> action,
  ) {
    return _wire_send_daemon_action(
      port_,
      action,
    );
  }

  late final _wire_send_daemon_actionPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<wire_DaemonAction>)>>('wire_send_daemon_action');
  late final _wire_send_daemon_action = _wire_send_daemon_actionPtr.asFunction<void Function(int, ffi.Pointer<wire_DaemonAction>)>();

  ffi.Pointer<wire_StringList> new_StringList_0(
    int len,
  ) {
    return _new_StringList_0(
      len,
    );
  }

  late final _new_StringList_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<wire_StringList> Function(ffi.Int32)>>('new_StringList_0');
  late final _new_StringList_0 = _new_StringList_0Ptr.asFunction<ffi.Pointer<wire_StringList> Function(int)>();

  ffi.Pointer<ffi.Bool> new_box_autoadd_bool_0(
    bool value,
  ) {
    return _new_box_autoadd_bool_0(
      value,
    );
  }

  late final _new_box_autoadd_bool_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Bool> Function(ffi.Bool)>>('new_box_autoadd_bool_0');
  late final _new_box_autoadd_bool_0 = _new_box_autoadd_bool_0Ptr.asFunction<ffi.Pointer<ffi.Bool> Function(bool)>();

  ffi.Pointer<wire_DaemonAction> new_box_autoadd_daemon_action_0() {
    return _new_box_autoadd_daemon_action_0();
  }

  late final _new_box_autoadd_daemon_action_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<wire_DaemonAction> Function()>>('new_box_autoadd_daemon_action_0');
  late final _new_box_autoadd_daemon_action_0 = _new_box_autoadd_daemon_action_0Ptr.asFunction<ffi.Pointer<wire_DaemonAction> Function()>();

  ffi.Pointer<ffi.Int32> new_box_autoadd_i32_0(
    int value,
  ) {
    return _new_box_autoadd_i32_0(
      value,
    );
  }

  late final _new_box_autoadd_i32_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>('new_box_autoadd_i32_0');
  late final _new_box_autoadd_i32_0 = _new_box_autoadd_i32_0Ptr.asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<wire_ImageData> new_box_autoadd_image_data_0() {
    return _new_box_autoadd_image_data_0();
  }

  late final _new_box_autoadd_image_data_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<wire_ImageData> Function()>>('new_box_autoadd_image_data_0');
  late final _new_box_autoadd_image_data_0 = _new_box_autoadd_image_data_0Ptr.asFunction<ffi.Pointer<wire_ImageData> Function()>();

  ffi.Pointer<wire_ImageSource> new_box_autoadd_image_source_0() {
    return _new_box_autoadd_image_source_0();
  }

  late final _new_box_autoadd_image_source_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<wire_ImageSource> Function()>>('new_box_autoadd_image_source_0');
  late final _new_box_autoadd_image_source_0 = _new_box_autoadd_image_source_0Ptr.asFunction<ffi.Pointer<wire_ImageSource> Function()>();

  ffi.Pointer<wire_Notification> new_box_autoadd_notification_0() {
    return _new_box_autoadd_notification_0();
  }

  late final _new_box_autoadd_notification_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<wire_Notification> Function()>>('new_box_autoadd_notification_0');
  late final _new_box_autoadd_notification_0 = _new_box_autoadd_notification_0Ptr.asFunction<ffi.Pointer<wire_Notification> Function()>();

  ffi.Pointer<ffi.Int32> new_box_autoadd_urgency_0(
    int value,
  ) {
    return _new_box_autoadd_urgency_0(
      value,
    );
  }

  late final _new_box_autoadd_urgency_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>('new_box_autoadd_urgency_0');
  late final _new_box_autoadd_urgency_0 = _new_box_autoadd_urgency_0Ptr.asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.UintPtr> new_box_autoadd_usize_0(
    int value,
  ) {
    return _new_box_autoadd_usize_0(
      value,
    );
  }

  late final _new_box_autoadd_usize_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>('new_box_autoadd_usize_0');
  late final _new_box_autoadd_usize_0 = _new_box_autoadd_usize_0Ptr.asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<wire_list_notification> new_list_notification_0(
    int len,
  ) {
    return _new_list_notification_0(
      len,
    );
  }

  late final _new_list_notification_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<wire_list_notification> Function(ffi.Int32)>>('new_list_notification_0');
  late final _new_list_notification_0 = _new_list_notification_0Ptr.asFunction<ffi.Pointer<wire_list_notification> Function(int)>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list_0(
    int len,
  ) {
    return _new_uint_8_list_0(
      len,
    );
  }

  late final _new_uint_8_list_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<wire_uint_8_list> Function(ffi.Int32)>>('new_uint_8_list_0');
  late final _new_uint_8_list_0 = _new_uint_8_list_0Ptr.asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();

  ffi.Pointer<DaemonActionKind> inflate_DaemonAction_Show() {
    return _inflate_DaemonAction_Show();
  }

  late final _inflate_DaemonAction_ShowPtr = _lookup<ffi.NativeFunction<ffi.Pointer<DaemonActionKind> Function()>>('inflate_DaemonAction_Show');
  late final _inflate_DaemonAction_Show = _inflate_DaemonAction_ShowPtr.asFunction<ffi.Pointer<DaemonActionKind> Function()>();

  ffi.Pointer<DaemonActionKind> inflate_DaemonAction_Close() {
    return _inflate_DaemonAction_Close();
  }

  late final _inflate_DaemonAction_ClosePtr = _lookup<ffi.NativeFunction<ffi.Pointer<DaemonActionKind> Function()>>('inflate_DaemonAction_Close');
  late final _inflate_DaemonAction_Close = _inflate_DaemonAction_ClosePtr.asFunction<ffi.Pointer<DaemonActionKind> Function()>();

  ffi.Pointer<DaemonActionKind> inflate_DaemonAction_Update() {
    return _inflate_DaemonAction_Update();
  }

  late final _inflate_DaemonAction_UpdatePtr = _lookup<ffi.NativeFunction<ffi.Pointer<DaemonActionKind> Function()>>('inflate_DaemonAction_Update');
  late final _inflate_DaemonAction_Update = _inflate_DaemonAction_UpdatePtr.asFunction<ffi.Pointer<DaemonActionKind> Function()>();

  ffi.Pointer<DaemonActionKind> inflate_DaemonAction_FlutterClose() {
    return _inflate_DaemonAction_FlutterClose();
  }

  late final _inflate_DaemonAction_FlutterClosePtr = _lookup<ffi.NativeFunction<ffi.Pointer<DaemonActionKind> Function()>>('inflate_DaemonAction_FlutterClose');
  late final _inflate_DaemonAction_FlutterClose = _inflate_DaemonAction_FlutterClosePtr.asFunction<ffi.Pointer<DaemonActionKind> Function()>();

  ffi.Pointer<DaemonActionKind> inflate_DaemonAction_FlutterCloseAllApp() {
    return _inflate_DaemonAction_FlutterCloseAllApp();
  }

  late final _inflate_DaemonAction_FlutterCloseAllAppPtr = _lookup<ffi.NativeFunction<ffi.Pointer<DaemonActionKind> Function()>>('inflate_DaemonAction_FlutterCloseAllApp');
  late final _inflate_DaemonAction_FlutterCloseAllApp = _inflate_DaemonAction_FlutterCloseAllAppPtr.asFunction<ffi.Pointer<DaemonActionKind> Function()>();

  ffi.Pointer<DaemonActionKind> inflate_DaemonAction_FlutterActionInvoked() {
    return _inflate_DaemonAction_FlutterActionInvoked();
  }

  late final _inflate_DaemonAction_FlutterActionInvokedPtr = _lookup<ffi.NativeFunction<ffi.Pointer<DaemonActionKind> Function()>>('inflate_DaemonAction_FlutterActionInvoked');
  late final _inflate_DaemonAction_FlutterActionInvoked = _inflate_DaemonAction_FlutterActionInvokedPtr.asFunction<ffi.Pointer<DaemonActionKind> Function()>();

  ffi.Pointer<ImageSourceKind> inflate_ImageSource_Data() {
    return _inflate_ImageSource_Data();
  }

  late final _inflate_ImageSource_DataPtr = _lookup<ffi.NativeFunction<ffi.Pointer<ImageSourceKind> Function()>>('inflate_ImageSource_Data');
  late final _inflate_ImageSource_Data = _inflate_ImageSource_DataPtr.asFunction<ffi.Pointer<ImageSourceKind> Function()>();

  ffi.Pointer<ImageSourceKind> inflate_ImageSource_Path() {
    return _inflate_ImageSource_Path();
  }

  late final _inflate_ImageSource_PathPtr = _lookup<ffi.NativeFunction<ffi.Pointer<ImageSourceKind> Function()>>('inflate_ImageSource_Path');
  late final _inflate_ImageSource_Path = _inflate_ImageSource_PathPtr.asFunction<ffi.Pointer<ImageSourceKind> Function()>();

  void free_WireSyncReturn(
    WireSyncReturn ptr,
  ) {
    return _free_WireSyncReturn(
      ptr,
    );
  }

  late final _free_WireSyncReturnPtr = _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturn)>>('free_WireSyncReturn');
  late final _free_WireSyncReturn = _free_WireSyncReturnPtr.asFunction<void Function(WireSyncReturn)>();
}

class _Dart_Handle extends ffi.Opaque {}

class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

class wire_StringList extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_uint_8_list>> ptr;

  @ffi.Int32()
  external int len;
}

class wire_Hints extends ffi.Struct {
  external ffi.Pointer<ffi.Bool> actions_icon;

  external ffi.Pointer<wire_uint_8_list> category;

  external ffi.Pointer<wire_uint_8_list> desktop_entry;

  external ffi.Pointer<ffi.Bool> resident;

  external ffi.Pointer<wire_uint_8_list> sound_file;

  external ffi.Pointer<wire_uint_8_list> sound_name;

  external ffi.Pointer<ffi.Bool> suppress_sound;

  external ffi.Pointer<ffi.Bool> transient;

  external ffi.Pointer<ffi.Int32> x;

  external ffi.Pointer<ffi.Int32> y;

  external ffi.Pointer<ffi.Int32> urgency;
}

class wire_ImageData extends ffi.Struct {
  @ffi.Int32()
  external int width;

  @ffi.Int32()
  external int height;

  @ffi.Int32()
  external int rowstride;

  @ffi.Bool()
  external bool one_point_two_bit_alpha;

  @ffi.Int32()
  external int bits_per_sample;

  @ffi.Int32()
  external int channels;

  external ffi.Pointer<wire_uint_8_list> data;
}

class wire_ImageSource_Data extends ffi.Struct {
  external ffi.Pointer<wire_ImageData> field0;
}

class wire_ImageSource_Path extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> field0;
}

class ImageSourceKind extends ffi.Union {
  external ffi.Pointer<wire_ImageSource_Data> Data;

  external ffi.Pointer<wire_ImageSource_Path> Path;
}

class wire_ImageSource extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ffi.Pointer<ImageSourceKind> kind;
}

class wire_Notification extends ffi.Struct {
  @ffi.Uint32()
  external int id;

  external ffi.Pointer<wire_uint_8_list> app_name;

  @ffi.Uint32()
  external int replaces_id;

  external ffi.Pointer<wire_uint_8_list> summary;

  external ffi.Pointer<wire_uint_8_list> body;

  external ffi.Pointer<wire_StringList> actions;

  @ffi.Int32()
  external int timeout;

  @ffi.Int64()
  external int created_at;

  external wire_Hints hints;

  external ffi.Pointer<wire_ImageSource> app_icon;

  external ffi.Pointer<wire_ImageSource> app_image;
}

class wire_DaemonAction_Show extends ffi.Struct {
  external ffi.Pointer<wire_Notification> field0;
}

class wire_DaemonAction_ShowNc extends ffi.Opaque {}

class wire_DaemonAction_CloseNc extends ffi.Opaque {}

class wire_DaemonAction_Close extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

class wire_list_notification extends ffi.Struct {
  external ffi.Pointer<wire_Notification> ptr;

  @ffi.Int32()
  external int len;
}

class wire_DaemonAction_Update extends ffi.Struct {
  external ffi.Pointer<wire_list_notification> field0;

  external ffi.Pointer<ffi.UintPtr> field1;
}

class wire_DaemonAction_FlutterClose extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

class wire_DaemonAction_FlutterCloseAll extends ffi.Opaque {}

class wire_DaemonAction_FlutterCloseAllApp extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> field0;
}

class wire_DaemonAction_FlutterActionInvoked extends ffi.Struct {
  @ffi.Uint32()
  external int field0;

  external ffi.Pointer<wire_uint_8_list> field1;
}

class DaemonActionKind extends ffi.Union {
  external ffi.Pointer<wire_DaemonAction_Show> Show;

  external ffi.Pointer<wire_DaemonAction_ShowNc> ShowNc;

  external ffi.Pointer<wire_DaemonAction_CloseNc> CloseNc;

  external ffi.Pointer<wire_DaemonAction_Close> Close;

  external ffi.Pointer<wire_DaemonAction_Update> Update;

  external ffi.Pointer<wire_DaemonAction_FlutterClose> FlutterClose;

  external ffi.Pointer<wire_DaemonAction_FlutterCloseAll> FlutterCloseAll;

  external ffi.Pointer<wire_DaemonAction_FlutterCloseAllApp> FlutterCloseAllApp;

  external ffi.Pointer<wire_DaemonAction_FlutterActionInvoked> FlutterActionInvoked;
}

class wire_DaemonAction extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ffi.Pointer<DaemonActionKind> kind;
}

typedef DartPostCObjectFnType = ffi.Pointer<ffi.NativeFunction<ffi.Bool Function(DartPort port_id, ffi.Pointer<ffi.Void> message)>>;
typedef DartPort = ffi.Int64;
